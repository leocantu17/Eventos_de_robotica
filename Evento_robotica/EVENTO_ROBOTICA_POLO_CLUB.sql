CREATE DATABASE EVENTO_ROBOTICA;
DROP DATABASE EVENTO_ROBOTICA;
USE EVENTO_ROBOTICA;

CREATE TABLE INSTITUCION(
	NOMBRE_INSTITUCION VARCHAR(200),
    NIVEL VARCHAR(200),
    DIRECCION VARCHAR(500),
    PRIMARY KEY(NOMBRE_INSTITUCION,NIVEL)
);

CREATE TABLE CRITERIOS(
	CODIGO_CRITERIO INT PRIMARY KEY ,
    PUNTOS_TOTALES INT
);

CREATE TABLE CATEGORIA(
	ID_CATEGORIA INT PRIMARY KEY AUTO_INCREMENT,
    TIPO VARCHAR(100)
);

CREATE TABLE CONSTRUCCION(
	CODIGO_CONSTRUCCION INT PRIMARY KEY AUTO_INCREMENT,
    VELOCIDAD INT,
    SENSORES VARCHAR(70),
    ESTABILIDAD VARCHAR(50),
    PROTOTIPO VARCHAR(50),
    CODIGO_CRITERIO INT,
    CONSTRAINT FK_CONSTRUCCION_CRITERIO FOREIGN KEY(CODIGO_CRITERIO) REFERENCES CRITERIOS(CODIGO_CRITERIO)
);

CREATE TABLE PROGRAMACION(
	CODIGO_PROGRAMACION INT PRIMARY KEY AUTO_INCREMENT,
    SOFTWARE VARCHAR(50),
    COMPLEJIDAD VARCHAR(100),
    CODIGO_EFICIENTE VARCHAR(50),
    MANIPULACION VARCHAR(70),
    DOCUMENTACION VARCHAR(70),
    DEMOSTRACION VARCHAR(70),
    CODIGO_CRITERIO INT,
    CONSTRAINT FK_PROGRAMACION_CRITERIO FOREIGN KEY(CODIGO_CRITERIO) REFERENCES CRITERIOS(CODIGO_CRITERIO)
);

CREATE TABLE DISEÑO(
	CODIGO_DISEÑO INT PRIMARY KEY AUTO_INCREMENT,
    PRESENTACION VARCHAR(100),
    REDACCION VARCHAR(50),
    NOMBRE VARCHAR(70),
    MEDIO_DIGITAL VARCHAR(70),
    DIAGRAMAS VARCHAR(70),
     CODIGO_CRITERIO INT,
    CONSTRAINT FK_DISEÑO_CRITERIO FOREIGN KEY(CODIGO_CRITERIO) REFERENCES CRITERIOS(CODIGO_CRITERIO)
);

CREATE TABLE JUECES(
	CODIGO_JUECES INT PRIMARY KEY AUTO_INCREMENT,
    ID_CATEGORIA INT,
    NOMBRE VARCHAR(100),
    INSTITUCION VARCHAR(50),
    NIVEL VARCHAR(50),
    CONSTRAINT FK_JUECES_CATEGORIA FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA)
);

CREATE TABLE TIENE(
	CODIGO_JUECES INT,
    CODIGO_CRITERIO INT,
    PRIMARY KEY(CODIGO_JUECES,CODIGO_CRITERIO),
    CONSTRAINT FK_TIENE_JUECES FOREIGN KEY(CODIGO_JUECES) REFERENCES JUECES(CODIGO_JUECES),
    CONSTRAINT FK_TIENE_CRITERIOS FOREIGN KEY(CODIGO_CRITERIO) REFERENCES CRITERIOS(CODIGO_CRITERIO)
);

CREATE TABLE EVENTO(
	CODIGO_EVENTO INT PRIMARY KEY AUTO_INCREMENT,
	ZONA VARCHAR(70),
	FECHA DATE,
	EQUIPOS INT
);

CREATE TABLE CALIFICA(
	CODIGO_EVENTO INT,
    CODIGO_JUECES INT,
    PRIMARY KEY(CODIGO_EVENTO,CODIGO_JUECES),
    CONSTRAINT FK_CALIFICA_EVENTO FOREIGN KEY(CODIGO_EVENTO) REFERENCES EVENTO(CODIGO_EVENTO),
    CONSTRAINT FK_CALIFICA_JUECES FOREIGN KEY(CODIGO_JUECES) REFERENCES JUECES(CODIGO_JUECES)
);

CREATE TABLE EQUIPO(
	CODIGO_EQUIPO INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(200),
    ASESOR VARCHAR(100),
    PUNTOS INT,
    ID_CATEGORIA INT,
    NOMBRE_INSTITUCION VARCHAR(200),
    NIVEL VARCHAR(200),
    CONSTRAINT FK_EQUIPO_CATEGORIA FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA),
    CONSTRAINT FK_EQUIPO_INSTITUCION FOREIGN KEY(NOMBRE_INSTITUCION,NIVEL) REFERENCES INSTITUCION(NOMBRE_INSTITUCION,NIVEL)
);

CREATE TABLE EVALUA(
	CODIGO_JUECES INT,
	CODIGO_EQUIPO INT,
	PRIMARY KEY(CODIGO_JUECES,CODIGO_EQUIPO),
	CONSTRAINT FK_EVALUA_JUECES FOREIGN KEY(CODIGO_JUECES) REFERENCES JUECES(CODIGO_JUECES),
	CONSTRAINT FK_EVALUA_EQUIPO FOREIGN KEY(CODIGO_EQUIPO)REFERENCES EQUIPO(CODIGO_EQUIPO) 
);

CREATE TABLE PARTICIPANTES(
	NUMERO_ESCOLAR INT PRIMARY KEY,
    NOMBRE VARCHAR(200),
    EDAD INT,
    CODIGO_EQUIPO INT,
    CONSTRAINT FK_PARTICIPANTES_EQUIPO FOREIGN KEY(CODIGO_EQUIPO) REFERENCES EQUIPO(CODIGO_EQUIPO)
);

CREATE TABLE PROYECTO(
	CODIGO_PROYECTO INT PRIMARY KEY AUTO_INCREMENT,
    DESCRIPCION VARCHAR(300),
    NOMBRE VARCHAR(200),
    ESTADO VARCHAR(200),
    CODIGO_EQUIPO INT,
    CONSTRAINT FK_PROYECTO_EQUIPO FOREIGN KEY(CODIGO_EQUIPO) REFERENCES EQUIPO(CODIGO_EQUIPO)
);
CREATE TABLE INVOLUCRADAS(
	CODIGO_EVENTO INT,
    NOMBRE_INSTITUCION VARCHAR(200),
    PRIMARY KEY(CODIGO_EVENTO,NOMBRE_INSTITUCION),
    CONSTRAINT FK_INVOLUCRADAS_EVENTO FOREIGN KEY(CODIGO_EVENTO) REFERENCES EVENTO(CODIGO_EVENTO),
    CONSTRAINT FK_INVOLUCRADAS_INSTIUCION FOREIGN KEY(NOMBRE_INSTITUCION) REFERENCES INSTITUCION(NOMBRE_INSTITUCION)
);

-- Super usuario 
create user 'superusuario'@'localhost' identified by 'evento';
grant select,update,insert,delete on evento_robotica.* to 'superusuario'@'localhost';
drop user 'superusuario'@'localhost';

-- Juez
create user 'juez'@'localhost' identified by 'juezEvento';
grant select on evento_robotica.califica to 'juez'@'localhost';
grant select,insert,update on evento_robotica.construccion to 'juez'@'localhost';
grant select,update,insert on evento_robotica.programacion to 'juez'@'localhost';
grant select,insert on evento_robotica.evalua to 'juez'@'localhost';
grant select on evento_robotica.criterios to 'juez'@'localhost';
grant select, update,insert on evento_robotica.diseño to 'juez'@'localhost';
grant select on evento_robotica.equipo to 'juez'@'localhost';
grant select on evento_robotica.proyecto to 'juez'@'localhost';
drop user 'juez'@'localhost';

-- Institucion
create user 'institucion'@'localhost' identified by 'institucionEvento';
grant select,insert on evento_robotica.equipo to 'institucion'@'localhost';
grant insert,delete on evento_robotica.participantes to 'institucion'@'localhost';
grant select,insert on evento_robotica.proyecto to 'institucion'@'localhost';
drop user 'institucion'@'localhost';

-- Asesor
create user 'asesor'@'localhost' identified by 'asesorEvento';
grant select on evento_robotica.participantes to 'asesor'@'localhost';
grant select on evento_robotica.proyecto to 'asesor'@'localhost';
drop user 'asesor'@'localhost';

-- Participante
create user 'participante'@'localhost' identified by 'partEvento';
grant select on evento_robotica.proyecto to 'participante'@'localhost';
grant select,update on evento_robotica.participantes to 'participante'@'localhost';
grant select on evento_robotica.equipo to 'participante'@'localhost';
drop user 'participante'@'localhost';


DELIMITER //
CREATE PROCEDURE ALTA_EVENTO(CODIGO_EVENTO_E INT,ZONA_EVE VARCHAR(70),DIA DATE)
BEGIN
INSERT INTO EVENTO(CODIGO_EVENTO,ZONA,FECHA) VALUES(CODIGO_EVENTO_E,ZONA_EVE,DIA);
END//
DELIMITER ;

SELECT * FROM CATEGORIA;
DELIMITER //
CREATE PROCEDURE ALTA_JUECES (CATEGORIA_JUEZ VARCHAR(60),NOMBRE_JUEZ VARCHAR(60),INSTITUCION_JUEZ VARCHAR(100),NIVEL_JUEZ VARCHAR(100))
BEGIN
INSERT INTO JUECES(CATEGORIA,NOMBRE,INSTITUCION,NIVEL) VALUES((SELECT ID_CATEGORIA FROM CATEGORIA WHERE TIPO=CATEGORIA_JUEZ),NOMBRE_JUEZ,INSTITUCION_JUEZ,NIVEL_JUEZ);
END//
DELIMITER ;

DELIMITER //
CREATE PROCEDURE INSTITUCIONES_EVENTO (CODIGO_EVENTO_E INT)
BEGIN
SELECT I.NOMBRE_INSTITUCION,I.NIVEL,I.DIRECCION FROM INSTITUCION I JOIN INVOLUCRADAS INV ON I.NOMBRE_INSTICUION=INV.NOMBRE_INSTITUCION JOIN EVENTO E ON INV.CODIGO_EVENTO=E.CODIGO_EVENTO;
END//
DELIMITER ;

SELECT * FROM EQUIPO;

DELIMITER //
CREATE PROCEDURE AGREGAR_EQUIPO (NOMBRE_EQU VARCHAR(100),ASESOR_EQU VARCHAR(100),CATEGORIA_EQU VARCHAR(60),NOMBRE_INSTITUCION_EQU INT,NIVEL_EQU VARCHAR(200))
BEGIN
INSERT INTO EQUIPO(NOMBRE,ASESOR,PUNTOS,ID_CATEGORIA,NOMBRE_INSTITUCION,NIVEL) VALUES(NOMBRE_EQU,ASESOR_EQU,(SELECT ID_CATEGORIA FROM CATEGORIA WHERE TIPO=CATEGORI_EQU),NOMBRE_INSTITUCION_EQU,NIVEL_EQU);
END//
DELIMITER ;

SELECT * FROM PARTICIPANTES;
DELIMITER //
CREATE PROCEDURE AGREGAR_PARTICIPANTES(NUMERO INT,NOMBRE_PAR VARCHAR(300),EDAD_P INT,EQUIPO VARCHAR(300))
BEGIN
	DECLARE CATEGORIA INT;
    SET CATEGORIA=(SELECT ID_CATEGORIA FROM EQUIPO WHERE NOMBRE=EQUIPO);
    
    IF(CATEGORIA=1) THEN
		IF(EDAD_P BETWEEN 6 AND 12) THEN
			INSERT INTO PARTICIPANTES(NUMERO_ESCOLAR,NOMBRE,EDAD,CODIGO_EQUIPO) VALUES(NUMERO,NOMBRE_PART,EDAD_P,(SELECT CODIGO_EQUIPO FROM EQUIPO WHERE NOMBRE=EQUIPO));
		ELSE
        SELECT 'ERR' AS RESULTADO;
        END IF;
    END IF;    
    IF(CATEGORIA=2) THEN
		IF(EDAD_P BETWEEN 11 AND 15) THEN
        INSERT INTO PARTICIPANTES(NUMERO_ESCOLAR,NOMBRE,EDAD,CODIGO_EQUIPO) VALUES(NUMERO,NOMBRE_PART,EDAD_P,(SELECT CODIGO_EQUIPO FROM EQUIPO WHERE NOMBRE=EQUIPO));
		ELSE
        SELECT 'ERR' AS RESULTADO;
        END IF;
    END IF;
    IF(CATEGORIA=3) THEN
		IF(EDAD_P BETWEEN 16 AND 18) THEN
        INSERT INTO PARTICIPANTES(NUMERO_ESCOLAR,NOMBRE,EDAD,CODIGO_EQUIPO) VALUES(NUMERO,NOMBRE_PART,EDAD_P,(SELECT CODIGO_EQUIPO FROM EQUIPO WHERE NOMBRE=EQUIPO));
		ELSE
        SELECT 'ERR' AS RESULTADO;
        END IF;
    END IF;
    IF(CATEGORIA=4) THEN
		IF(EDAD_P BETWEEN 18 AND 25) THEN 
        INSERT INTO PARTICIPANTES(NUMERO_ESCOLAR,NOMBRE,EDAD,CODIGO_EQUIPO) VALUES(NUMERO,NOMBRE_PART,EDAD_P,(SELECT CODIGO_EQUIPO FROM EQUIPO WHERE NOMBRE=EQUIPO));
		ELSE
        SELECT 'ERR' AS RESULTADO;
        END IF;
    END IF;
END//
DELIMITER ;

SELECT * FROM EQUIPO
DELIMITER //
CREATE PROCEDURE TABLA_PARTICIPANTES_INS(INSTITUCION VARCHAR(300))
BEGIN
	SELECT P.NUMERO_ESCOLAR,P.NOMBRE,P.EDAD,E.NOMBRE  FROM PARTICIPANTES P JOIN EQUIPO E ON P.CODIGO_EQUIPO=E.CODIGO_EQUIPO WHERE E.NOMBRE_INSTITUCION=INSTIUCION;
END//
DELIMITER ;

DELIMITER //
CREATE PROCEDURE EQUIPOS_INSTITUCION (INSTITUCION VARCHAR(300))
BEGIN
	SELECT * FROM EQUIPO WHERE NOMBRE_INSTITUCION=INSTITUCION;
END//
DELIMITER ;

DELIMITER //
CREATE PROCEDURE TABLA_PARTICIPANTES_ASE(ASESOR_PA VARCHAR(300))
BEGIN
	SELECT P.NUMERO_ESCOLAR,P.NOMBRE,P.EDAD,E.NOMBRE  FROM PARTICIPANTES P JOIN EQUIPO E ON P.CODIGO_EQUIPO=E.CODIGO_EQUIPO WHERE E.ASESOR=ASESOR_PA;
END//
DELIMITER ;

SELECT * FROM PROYECTO;
DELIMITER //
CREATE PROCEDURE DETALLES_PROYECTO(PROYECTO INT)
BEGIN
SELECT PRO.NOMBRE FROM PROYECTO PRO JOIN EQUIPO E ON PRO.CODIGO_EQUIPO=E.CODIGO_EQUIPO WHERE PRO.CODIGO_PROYECTO=PROYECTO;
END//
DELIMITER ;

DELIMITER //
CREATE PROCEDURE PARTICIPANTES_PROYECTO(PROYECTO INT)
BEGIN
SELECT PRO.NOMBRE FROM PROYECTO PRO JOIN EQUIPO E ON PRO.CODIGO_EQUIPO=E.CODIGO_EQUIPO JOIN PARTICIPANTES PA ON E.CODIGO_EQUIPO=PA.CODIGO_EQUIPO WHERE PRO.CODIGO_PROYECTO=PROYECTO;
END//
DELIMITER ;