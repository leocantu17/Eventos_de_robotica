CREATE DATABASE EVENTO_ROBOTICA;
DROP DATABASE EVENTO_ROBOTICA;
USE EVENTO_ROBOTICA;

CREATE TABLE CUENTAS(
	ID_CUENTA INT PRIMARY KEY AUTO_INCREMENT,
    CORREO VARCHAR(100),
    CONTRASENA VARCHAR(100),
    PUESTO VARCHAR(30)
);

CREATE TABLE INSTITUCION(
	NOMBRE_INSTITUCION VARCHAR(200),
    NIVEL VARCHAR(200),
    DIRECCION VARCHAR(500),
    ID_CUENTA INT,
    PRIMARY KEY(NOMBRE_INSTITUCION,NIVEL),
    CONSTRAINT FK_INSTITUCION_CUENTA FOREIGN KEY(ID_CUENTA) REFERENCES CUENTAS(ID_CUENTA)
);

CREATE TABLE CRITERIOS(
	CODIGO_CRITERIO INT PRIMARY KEY ,
    PUNTOS_TOTALES INT
);

CREATE TABLE CATEGORIA(
	ID_CATEGORIA INT PRIMARY KEY AUTO_INCREMENT,
    TIPO VARCHAR(100)
);

CREATE TABLE CONSTRUCCION(
	CODIGO_CONSTRUCCION INT PRIMARY KEY AUTO_INCREMENT,
    VELOCIDAD INT,
    SENSORES VARCHAR(70),
    ESTABILIDAD VARCHAR(50),
    PROTOTIPO VARCHAR(50),
    CODIGO_CRITERIO INT,
    CONSTRAINT FK_CONSTRUCCION_CRITERIO FOREIGN KEY(CODIGO_CRITERIO) REFERENCES CRITERIOS(CODIGO_CRITERIO)
);

CREATE TABLE PROGRAMACION(
	CODIGO_PROGRAMACION INT PRIMARY KEY AUTO_INCREMENT,
    SOFTWARE VARCHAR(50),
    COMPLEJIDAD VARCHAR(100),
    CODIGO_EFICIENTE VARCHAR(50),
    MANIPULACION VARCHAR(70),
    DOCUMENTACION VARCHAR(70),
    DEMOSTRACION VARCHAR(70),
    CODIGO_CRITERIO INT,
    CONSTRAINT FK_PROGRAMACION_CRITERIO FOREIGN KEY(CODIGO_CRITERIO) REFERENCES CRITERIOS(CODIGO_CRITERIO)
);

CREATE TABLE DISEÑO(
	CODIGO_DISEÑO INT PRIMARY KEY AUTO_INCREMENT,
    PRESENTACION VARCHAR(100),
    REDACCION VARCHAR(50),
    NOMBRE VARCHAR(70),
    MEDIO_DIGITAL VARCHAR(70),
    DIAGRAMAS VARCHAR(70),
     CODIGO_CRITERIO INT,
    CONSTRAINT FK_DISEÑO_CRITERIO FOREIGN KEY(CODIGO_CRITERIO) REFERENCES CRITERIOS(CODIGO_CRITERIO)
);

CREATE TABLE JUECES(
	CODIGO_JUECES INT PRIMARY KEY AUTO_INCREMENT,
    ID_CATEGORIA INT,
    NOMBRE VARCHAR(100),
    INSTITUCION VARCHAR(50),
    NIVEL VARCHAR(50),
    ID_CUENTA INT,
    CONSTRAINT FK_JUEZ_CUENTA FOREIGN KEY(ID_CUENTA) REFERENCES CUENTAS(ID_CUENTA),
    CONSTRAINT FK_JUECES_CATEGORIA FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA)
);

CREATE TABLE TIENE(
	CODIGO_JUECES INT,
    CODIGO_CRITERIO INT,
    PRIMARY KEY(CODIGO_JUECES,CODIGO_CRITERIO),
    CONSTRAINT FK_TIENE_JUECES FOREIGN KEY(CODIGO_JUECES) REFERENCES JUECES(CODIGO_JUECES),
    CONSTRAINT FK_TIENE_CRITERIOS FOREIGN KEY(CODIGO_CRITERIO) REFERENCES CRITERIOS(CODIGO_CRITERIO)
);

CREATE TABLE EVENTO(
	CODIGO_EVENTO INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(60),
	ZONA VARCHAR(70),
	FECHA DATE,
	EQUIPOS INT
);

CREATE TABLE CALIFICA(
	CODIGO_EVENTO INT,
    CODIGO_JUECES INT,
    PRIMARY KEY(CODIGO_EVENTO,CODIGO_JUECES),
    CONSTRAINT FK_CALIFICA_EVENTO FOREIGN KEY(CODIGO_EVENTO) REFERENCES EVENTO(CODIGO_EVENTO),
    CONSTRAINT FK_CALIFICA_JUECES FOREIGN KEY(CODIGO_JUECES) REFERENCES JUECES(CODIGO_JUECES)
);

CREATE TABLE ASESOR(
	ID_ASESOR INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(100),
    ID_CUENTA INT,
    NIVEL VARCHAR(100),
    CONSTRAINT FK_ASESOR_CUENTA FOREIGN KEY(ID_CUENTA) REFERENCES CUENTAS(ID_CUENTA)
);

CREATE TABLE EQUIPO(
	CODIGO_EQUIPO INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(200),
    ID_ASESOR INT,
    PUNTOS INT,
    ID_CATEGORIA INT,
    NOMBRE_INSTITUCION VARCHAR(200),
    NIVEL VARCHAR(200),
    CONSTRAINT FK_EQUIPO_CATEGORIA FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA),
    CONSTRAINT FK_EQUIPO_INSTITUCION FOREIGN KEY(NOMBRE_INSTITUCION,NIVEL) REFERENCES INSTITUCION(NOMBRE_INSTITUCION,NIVEL),
    CONSTRAINT FK_EQUIPO_ASESOR FOREIGN KEY(ID_ASESOR) REFERENCES ASESOR(ID_ASESOR)
);

CREATE TABLE EVALUA(
	CODIGO_JUECES INT,
	CODIGO_EQUIPO INT,
	PRIMARY KEY(CODIGO_JUECES,CODIGO_EQUIPO),
	CONSTRAINT FK_EVALUA_JUECES FOREIGN KEY(CODIGO_JUECES) REFERENCES JUECES(CODIGO_JUECES),
	CONSTRAINT FK_EVALUA_EQUIPO FOREIGN KEY(CODIGO_EQUIPO)REFERENCES EQUIPO(CODIGO_EQUIPO) 
);

CREATE TABLE PARTICIPANTES(
	NUMERO_ESCOLAR INT PRIMARY KEY,
    NOMBRE VARCHAR(200),
    EDAD INT,
    CODIGO_EQUIPO INT,
    ID_CUENTA INT,
    CONSTRAINT FK_PARTICIPANTE_CUENTA FOREIGN KEY(ID_CUENTA) REFERENCES CUENTAS(ID_CUENTA),
    CONSTRAINT FK_PARTICIPANTES_EQUIPO FOREIGN KEY(CODIGO_EQUIPO) REFERENCES EQUIPO(CODIGO_EQUIPO)
);

CREATE TABLE PROYECTO(
	CODIGO_PROYECTO INT PRIMARY KEY AUTO_INCREMENT,
    DESCRIPCION VARCHAR(300),
    NOMBRE VARCHAR(200),
    ESTADO VARCHAR(200),
    CODIGO_EQUIPO INT,
    CONSTRAINT FK_PROYECTO_EQUIPO FOREIGN KEY(CODIGO_EQUIPO) REFERENCES EQUIPO(CODIGO_EQUIPO)
);
CREATE TABLE INVOLUCRADAS(
	CODIGO_EVENTO INT,
    NOMBRE_INSTITUCION VARCHAR(200),
    PRIMARY KEY(CODIGO_EVENTO,NOMBRE_INSTITUCION),
    CONSTRAINT FK_INVOLUCRADAS_EVENTO FOREIGN KEY(CODIGO_EVENTO) REFERENCES EVENTO(CODIGO_EVENTO),
    CONSTRAINT FK_INVOLUCRADAS_INSTIUCION FOREIGN KEY(NOMBRE_INSTITUCION) REFERENCES INSTITUCION(NOMBRE_INSTITUCION)
);

INSERT INTO CATEGORIA(TIPO) VALUES('Primaria'),('Secundaria'),('Preparatoria'),('Universidad');
-- Super usuario 
create user 'superusuario'@'localhost' identified by 'evento';
grant select,update,insert,delete on evento_robotica.* to 'superusuario'@'localhost';
drop user 'superusuario'@'localhost';

-- Juez
create user 'juez'@'localhost' identified by 'juezEvento';
grant select on evento_robotica.califica to 'juez'@'localhost';
grant select,insert,update on evento_robotica.construccion to 'juez'@'localhost';
grant select,update,insert on evento_robotica.programacion to 'juez'@'localhost';
grant select,insert on evento_robotica.evalua to 'juez'@'localhost';
grant select on evento_robotica.criterios to 'juez'@'localhost';
grant select, update,insert on evento_robotica.diseño to 'juez'@'localhost';
grant select on evento_robotica.equipo to 'juez'@'localhost';
grant select on evento_robotica.proyecto to 'juez'@'localhost';
drop user 'juez'@'localhost';

-- Institucion
create user 'institucion'@'localhost' identified by 'institucionEvento';
grant select,insert on evento_robotica.equipo to 'institucion'@'localhost';
grant insert,delete on evento_robotica.participantes to 'institucion'@'localhost';
grant select,insert on evento_robotica.proyecto to 'institucion'@'localhost';
drop user 'institucion'@'localhost';

-- Asesor
create user 'asesor'@'localhost' identified by 'asesorEvento';
grant select on evento_robotica.participantes to 'asesor'@'localhost';
grant select on evento_robotica.proyecto to 'asesor'@'localhost';
drop user 'asesor'@'localhost';

-- Participante
create user 'participante'@'localhost' identified by 'partEvento';
grant select on evento_robotica.proyecto to 'participante'@'localhost';
grant select,update on evento_robotica.participantes to 'participante'@'localhost';
grant select on evento_robotica.equipo to 'participante'@'localhost';
drop user 'participante'@'localhost';


DELIMITER //
CREATE PROCEDURE INICIAR_SESION(CORREO_INI VARCHAR(100),CONTRASENA_INI VARCHAR(100))
BEGIN
	SELECT PUESTO,ID_CUENTA FROM CUENTAS WHERE CORREO=CORREO_INI AND CONTRASENA=CONTRASENA_INI;
END//
DELIMITER ;


DELIMITER //
CREATE PROCEDURE ALTA_EVENTO(NOMBRE_EVE VARCHAR(60),ZONA_EVE VARCHAR(70),DIA DATE,OUT MENSAJE VARCHAR(30))
BEGIN
	IF EXISTS(SELECT 1 FROM EVENTO WHERE NOMBRE=NOMBRE_EVE) THEN
	SET MENSAJE='EXISTE';
	ELSE
	INSERT INTO EVENTO(NOMBRE,ZONA,FECHA) VALUES(NOMBRE_EVE,ZONA_EVE,DIA);
	SET MENSAJE='AGREGADO';
	END IF;
END//
DELIMITER ;


DELIMITER //
CREATE PROCEDURE EVENTO() 
BEGIN
	SELECT CODIGO_EVENTO,NOMBRE,ZONA,DATE_FORMAT(FECHA,'%d-%m-%Y') AS FECHA FROM EVENTO;
END//
DELIMITER ;


DELIMITER //
CREATE PROCEDURE ALTA_JUECES (CATEGORIA_JUEZ INT,NOMBRE_JUEZ VARCHAR(60),INSTITUCION_JUEZ VARCHAR(100),NIVEL_JUEZ VARCHAR(100),CODIGO_EVE_JUEZ INT
,CORREO_JUEZ VARCHAR(100),CONTRASENA_JUEZ VARCHAR(100),OUT MENSAJE VARCHAR(30))
BEGIN
DECLARE CODIGO_JUEZ INT;
DECLARE CODIGO_CUENTA INT;
	IF EXISTS(SELECT 1 FROM CUENTAS WHERE CORREO=CORREO_JUEZ) THEN
	SET MENSAJE='EXI';
	ELSE
    INSERT INTO CUENTAS(CORREO,CONTRASENA,PUESTO) VALUES(CORREO_JUEZ,CONTRASENA_JUEZ,'JUEZ');
    SET CODIGO_CUENTA=LAST_INSERT_ID();
	INSERT INTO JUECES(ID_CATEGORIA,NOMBRE,INSTITUCION,NIVEL,ID_CUENTA) VALUES(CATEGORIA_JUEZ,NOMBRE_JUEZ,INSTITUCION_JUEZ,NIVEL_JUEZ,CODIGO_CUENTA);
	SET CODIGO_JUEZ=LAST_INSERT_ID();
	INSERT INTO CALIFICA(CODIGO_EVENTO,CODIGO_JUECES) VALUES(CODIGO_EVE_JUEZ,CODIGO_JUEZ);
    SET MENSAJE='OK';
END IF;
END//
DELIMITER ;

DELIMITER //
CREATE PROCEDURE INSTITUCIONES_EVENTO (CODIGO_EVENTO_E INT)
BEGIN
SELECT I.NOMBRE_INSTITUCION,I.NIVEL,I.DIRECCION FROM institucion I JOIN INVOLUCRADAS INV ON I.NOMBRE_INSTITUCION=INV.NOMBRE_INSTITUCION JOIN EVENTO E ON INV.CODIGO_EVENTO=E.CODIGO_EVENTO;
END//
DELIMITER ;